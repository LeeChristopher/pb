// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: product/product.proto

package product

import (
	context "context"
	base "github.com/LeeChristopher/pb/base"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ProductListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SkuId   uint64 `protobuf:"varint,2,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	SkuName string `protobuf:"bytes,3,opt,name=sku_name,json=skuName,proto3" json:"sku_name,omitempty"`
	Status  uint32 `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	NowPage uint32 `protobuf:"varint,5,opt,name=now_page,json=nowPage,proto3" json:"now_page,omitempty"`
	TraceId string `protobuf:"bytes,6,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
}

func (x *ProductListReq) Reset() {
	*x = ProductListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductListReq) ProtoMessage() {}

func (x *ProductListReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductListReq.ProtoReflect.Descriptor instead.
func (*ProductListReq) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{0}
}

func (x *ProductListReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductListReq) GetSkuId() uint64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *ProductListReq) GetSkuName() string {
	if x != nil {
		return x.SkuName
	}
	return ""
}

func (x *ProductListReq) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ProductListReq) GetNowPage() uint32 {
	if x != nil {
		return x.NowPage
	}
	return 0
}

func (x *ProductListReq) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

type ProductSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SkuId    uint64 `protobuf:"varint,2,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	SpecId   uint64 `protobuf:"varint,3,opt,name=spec_id,json=specId,proto3" json:"spec_id,omitempty"`
	SpecName string `protobuf:"bytes,4,opt,name=spec_name,json=specName,proto3" json:"spec_name,omitempty"`
	SpecDesc string `protobuf:"bytes,5,opt,name=spec_desc,json=specDesc,proto3" json:"spec_desc,omitempty"`
}

func (x *ProductSpec) Reset() {
	*x = ProductSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductSpec) ProtoMessage() {}

func (x *ProductSpec) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductSpec.ProtoReflect.Descriptor instead.
func (*ProductSpec) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{1}
}

func (x *ProductSpec) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductSpec) GetSkuId() uint64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *ProductSpec) GetSpecId() uint64 {
	if x != nil {
		return x.SpecId
	}
	return 0
}

func (x *ProductSpec) GetSpecName() string {
	if x != nil {
		return x.SpecName
	}
	return ""
}

func (x *ProductSpec) GetSpecDesc() string {
	if x != nil {
		return x.SpecDesc
	}
	return ""
}

type ProductStock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SkuId       uint64 `protobuf:"varint,2,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	NowStock    uint64 `protobuf:"varint,3,opt,name=now_stock,json=nowStock,proto3" json:"now_stock,omitempty"`
	FreezeStock uint64 `protobuf:"varint,4,opt,name=freeze_stock,json=freezeStock,proto3" json:"freeze_stock,omitempty"`
	CreatedAt   string `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   string `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *ProductStock) Reset() {
	*x = ProductStock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductStock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductStock) ProtoMessage() {}

func (x *ProductStock) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductStock.ProtoReflect.Descriptor instead.
func (*ProductStock) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{2}
}

func (x *ProductStock) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductStock) GetSkuId() uint64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *ProductStock) GetNowStock() uint64 {
	if x != nil {
		return x.NowStock
	}
	return 0
}

func (x *ProductStock) GetFreezeStock() uint64 {
	if x != nil {
		return x.FreezeStock
	}
	return 0
}

func (x *ProductStock) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ProductStock) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type ProductInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SpuId          uint64          `protobuf:"varint,2,opt,name=spu_id,json=spuId,proto3" json:"spu_id,omitempty"`
	SkuName        string          `protobuf:"bytes,3,opt,name=sku_name,json=skuName,proto3" json:"sku_name,omitempty"`
	SkuDesc        string          `protobuf:"bytes,4,opt,name=sku_desc,json=skuDesc,proto3" json:"sku_desc,omitempty"`
	SkuPrice       float64         `protobuf:"fixed64,5,opt,name=sku_price,json=skuPrice,proto3" json:"sku_price,omitempty"`
	SkuMemberPrice float64         `protobuf:"fixed64,6,opt,name=sku_member_price,json=skuMemberPrice,proto3" json:"sku_member_price,omitempty"`
	SkuUnit        string          `protobuf:"bytes,7,opt,name=sku_unit,json=skuUnit,proto3" json:"sku_unit,omitempty"`
	SkuImages      []string        `protobuf:"bytes,8,rep,name=sku_images,json=skuImages,proto3" json:"sku_images,omitempty"`
	SkuDetail      string          `protobuf:"bytes,9,opt,name=sku_detail,json=skuDetail,proto3" json:"sku_detail,omitempty"`
	SkuSpec        []*ProductSpec  `protobuf:"bytes,10,rep,name=sku_spec,json=skuSpec,proto3" json:"sku_spec,omitempty"`
	SkuStock       []*ProductStock `protobuf:"bytes,11,rep,name=sku_stock,json=skuStock,proto3" json:"sku_stock,omitempty"`
	Status         uint32          `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt      string          `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      string          `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *ProductInfo) Reset() {
	*x = ProductInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductInfo) ProtoMessage() {}

func (x *ProductInfo) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductInfo.ProtoReflect.Descriptor instead.
func (*ProductInfo) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{3}
}

func (x *ProductInfo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductInfo) GetSpuId() uint64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *ProductInfo) GetSkuName() string {
	if x != nil {
		return x.SkuName
	}
	return ""
}

func (x *ProductInfo) GetSkuDesc() string {
	if x != nil {
		return x.SkuDesc
	}
	return ""
}

func (x *ProductInfo) GetSkuPrice() float64 {
	if x != nil {
		return x.SkuPrice
	}
	return 0
}

func (x *ProductInfo) GetSkuMemberPrice() float64 {
	if x != nil {
		return x.SkuMemberPrice
	}
	return 0
}

func (x *ProductInfo) GetSkuUnit() string {
	if x != nil {
		return x.SkuUnit
	}
	return ""
}

func (x *ProductInfo) GetSkuImages() []string {
	if x != nil {
		return x.SkuImages
	}
	return nil
}

func (x *ProductInfo) GetSkuDetail() string {
	if x != nil {
		return x.SkuDetail
	}
	return ""
}

func (x *ProductInfo) GetSkuSpec() []*ProductSpec {
	if x != nil {
		return x.SkuSpec
	}
	return nil
}

func (x *ProductInfo) GetSkuStock() []*ProductStock {
	if x != nil {
		return x.SkuStock
	}
	return nil
}

func (x *ProductInfo) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ProductInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ProductInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type ProductListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint64         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Runtime float64        `protobuf:"fixed64,3,opt,name=runtime,proto3" json:"runtime,omitempty"`
	Data    []*ProductInfo `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ProductListRsp) Reset() {
	*x = ProductListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductListRsp) ProtoMessage() {}

func (x *ProductListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductListRsp.ProtoReflect.Descriptor instead.
func (*ProductListRsp) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{4}
}

func (x *ProductListRsp) GetCode() uint64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ProductListRsp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ProductListRsp) GetRuntime() float64 {
	if x != nil {
		return x.Runtime
	}
	return 0
}

func (x *ProductListRsp) GetData() []*ProductInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type ProductAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spu     string         `protobuf:"bytes,1,opt,name=spu,proto3" json:"spu,omitempty"`
	Skus    []*ProductInfo `protobuf:"bytes,2,rep,name=skus,proto3" json:"skus,omitempty"`
	TraceId string         `protobuf:"bytes,3,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
}

func (x *ProductAddReq) Reset() {
	*x = ProductAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAddReq) ProtoMessage() {}

func (x *ProductAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAddReq.ProtoReflect.Descriptor instead.
func (*ProductAddReq) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{5}
}

func (x *ProductAddReq) GetSpu() string {
	if x != nil {
		return x.Spu
	}
	return ""
}

func (x *ProductAddReq) GetSkus() []*ProductInfo {
	if x != nil {
		return x.Skus
	}
	return nil
}

func (x *ProductAddReq) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

type ProductEditReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spu     string         `protobuf:"bytes,1,opt,name=spu,proto3" json:"spu,omitempty"`
	Skus    []*ProductInfo `protobuf:"bytes,2,rep,name=skus,proto3" json:"skus,omitempty"`
	TraceId string         `protobuf:"bytes,3,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
}

func (x *ProductEditReq) Reset() {
	*x = ProductEditReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductEditReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductEditReq) ProtoMessage() {}

func (x *ProductEditReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductEditReq.ProtoReflect.Descriptor instead.
func (*ProductEditReq) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{6}
}

func (x *ProductEditReq) GetSpu() string {
	if x != nil {
		return x.Spu
	}
	return ""
}

func (x *ProductEditReq) GetSkus() []*ProductInfo {
	if x != nil {
		return x.Skus
	}
	return nil
}

func (x *ProductEditReq) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

type ProductStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      []uint64 `protobuf:"varint,1,rep,packed,name=id,proto3" json:"id,omitempty"`
	SpuId   []uint64 `protobuf:"varint,2,rep,packed,name=spu_id,json=spuId,proto3" json:"spu_id,omitempty"`
	SkuId   []uint64 `protobuf:"varint,3,rep,packed,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	Status  uint32   `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	TraceId string   `protobuf:"bytes,5,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
}

func (x *ProductStatusReq) Reset() {
	*x = ProductStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductStatusReq) ProtoMessage() {}

func (x *ProductStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductStatusReq.ProtoReflect.Descriptor instead.
func (*ProductStatusReq) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{7}
}

func (x *ProductStatusReq) GetId() []uint64 {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ProductStatusReq) GetSpuId() []uint64 {
	if x != nil {
		return x.SpuId
	}
	return nil
}

func (x *ProductStatusReq) GetSkuId() []uint64 {
	if x != nil {
		return x.SkuId
	}
	return nil
}

func (x *ProductStatusReq) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ProductStatusReq) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

type ProductStockReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      []uint64 `protobuf:"varint,1,rep,packed,name=id,proto3" json:"id,omitempty"`
	SkuId   []uint64 `protobuf:"varint,2,rep,packed,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	TraceId string   `protobuf:"bytes,3,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
}

func (x *ProductStockReq) Reset() {
	*x = ProductStockReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductStockReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductStockReq) ProtoMessage() {}

func (x *ProductStockReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductStockReq.ProtoReflect.Descriptor instead.
func (*ProductStockReq) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{8}
}

func (x *ProductStockReq) GetId() []uint64 {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ProductStockReq) GetSkuId() []uint64 {
	if x != nil {
		return x.SkuId
	}
	return nil
}

func (x *ProductStockReq) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

type ProductStockRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint64          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Runtime float64         `protobuf:"fixed64,3,opt,name=runtime,proto3" json:"runtime,omitempty"`
	Stocks  []*ProductStock `protobuf:"bytes,4,rep,name=stocks,proto3" json:"stocks,omitempty"`
}

func (x *ProductStockRsp) Reset() {
	*x = ProductStockRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_product_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductStockRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductStockRsp) ProtoMessage() {}

func (x *ProductStockRsp) ProtoReflect() protoreflect.Message {
	mi := &file_product_product_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductStockRsp.ProtoReflect.Descriptor instead.
func (*ProductStockRsp) Descriptor() ([]byte, []int) {
	return file_product_product_proto_rawDescGZIP(), []int{9}
}

func (x *ProductStockRsp) GetCode() uint64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ProductStockRsp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ProductStockRsp) GetRuntime() float64 {
	if x != nil {
		return x.Runtime
	}
	return 0
}

func (x *ProductStockRsp) GetStocks() []*ProductStock {
	if x != nil {
		return x.Stocks
	}
	return nil
}

var File_product_product_proto protoreflect.FileDescriptor

var file_product_product_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x1a, 0x0f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xa0, 0x01, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x6b, 0x75, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x6b, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x6e, 0x6f, 0x77, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x6e, 0x6f, 0x77, 0x50, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x22, 0x87, 0x01, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x53, 0x70, 0x65, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73,
	0x70, 0x65, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x70,
	0x65, 0x63, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x44, 0x65, 0x73, 0x63, 0x22, 0xb3,
	0x01, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x77, 0x5f, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6e, 0x6f, 0x77, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x5f, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x66, 0x72, 0x65, 0x65, 0x7a,
	0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0xc5, 0x03, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x70, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x70, 0x75, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x6b, 0x75, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x6b, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x75, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6b, 0x75, 0x44, 0x65, 0x73,
	0x63, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6b, 0x75, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x73, 0x6b, 0x75, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x28,
	0x0a, 0x10, 0x73, 0x6b, 0x75, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x73, 0x6b, 0x75, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x75, 0x5f,
	0x75, 0x6e, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6b, 0x75, 0x55,
	0x6e, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6b, 0x75, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6b, 0x75, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6b, 0x75, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x2f, 0x0a, 0x08, 0x73, 0x6b, 0x75, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x70, 0x65, 0x63, 0x52, 0x07, 0x73, 0x6b, 0x75, 0x53, 0x70,
	0x65, 0x63, 0x12, 0x32, 0x0a, 0x09, 0x73, 0x6b, 0x75, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18,
	0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x08, 0x73, 0x6b,
	0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x82, 0x01, 0x0a,
	0x0e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x66, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x70, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x73, 0x70, 0x75, 0x12, 0x28, 0x0a, 0x04, 0x73, 0x6b, 0x75, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x73, 0x6b, 0x75, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x0e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x73,
	0x70, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x70, 0x75, 0x12, 0x28, 0x0a,
	0x04, 0x73, 0x6b, 0x75, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x73, 0x6b, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x22, 0x83, 0x01, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x70, 0x75, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x05, 0x73, 0x70, 0x75, 0x49, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x05,
	0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73,
	0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x05, 0x73, 0x6b, 0x75,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x88, 0x01,
	0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x07, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x6f,
	0x63, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x52, 0x06, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x32, 0xc8, 0x02, 0x0a, 0x07, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x12, 0x42, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x18, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x73, 0x70, 0x12,
	0x36, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x16, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x6c, 0x69,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x0b, 0x45, 0x64, 0x69, 0x74, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x10, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x6c, 0x69, 0x42, 0x61, 0x73, 0x65, 0x52, 0x73,
	0x70, 0x12, 0x40, 0x0a, 0x11, 0x45, 0x64, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x10, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x6c, 0x69, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x73, 0x70, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x4c, 0x65, 0x65, 0x43, 0x68, 0x72, 0x69, 0x73, 0x74, 0x6f, 0x70, 0x68, 0x65, 0x72,
	0x2f, 0x70, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_product_product_proto_rawDescOnce sync.Once
	file_product_product_proto_rawDescData = file_product_product_proto_rawDesc
)

func file_product_product_proto_rawDescGZIP() []byte {
	file_product_product_proto_rawDescOnce.Do(func() {
		file_product_product_proto_rawDescData = protoimpl.X.CompressGZIP(file_product_product_proto_rawDescData)
	})
	return file_product_product_proto_rawDescData
}

var file_product_product_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_product_product_proto_goTypes = []interface{}{
	(*ProductListReq)(nil),   // 0: product.ProductListReq
	(*ProductSpec)(nil),      // 1: product.ProductSpec
	(*ProductStock)(nil),     // 2: product.ProductStock
	(*ProductInfo)(nil),      // 3: product.ProductInfo
	(*ProductListRsp)(nil),   // 4: product.ProductListRsp
	(*ProductAddReq)(nil),    // 5: product.ProductAddReq
	(*ProductEditReq)(nil),   // 6: product.ProductEditReq
	(*ProductStatusReq)(nil), // 7: product.ProductStatusReq
	(*ProductStockReq)(nil),  // 8: product.ProductStockReq
	(*ProductStockRsp)(nil),  // 9: product.ProductStockRsp
	(*base.CliBaseRsp)(nil),  // 10: base.CliBaseRsp
}
var file_product_product_proto_depIdxs = []int32{
	1,  // 0: product.ProductInfo.sku_spec:type_name -> product.ProductSpec
	2,  // 1: product.ProductInfo.sku_stock:type_name -> product.ProductStock
	3,  // 2: product.ProductListRsp.data:type_name -> product.ProductInfo
	3,  // 3: product.ProductAddReq.skus:type_name -> product.ProductInfo
	3,  // 4: product.ProductEditReq.skus:type_name -> product.ProductInfo
	2,  // 5: product.ProductStockRsp.stocks:type_name -> product.ProductStock
	0,  // 6: product.Product.GetProductList:input_type -> product.ProductListReq
	8,  // 7: product.Product.GetProductStock:input_type -> product.ProductStockReq
	5,  // 8: product.Product.AddProduct:input_type -> product.ProductAddReq
	6,  // 9: product.Product.EditProduct:input_type -> product.ProductEditReq
	7,  // 10: product.Product.EditProductStatus:input_type -> product.ProductStatusReq
	4,  // 11: product.Product.GetProductList:output_type -> product.ProductListRsp
	9,  // 12: product.Product.GetProductStock:output_type -> product.ProductStockRsp
	10, // 13: product.Product.AddProduct:output_type -> base.CliBaseRsp
	10, // 14: product.Product.EditProduct:output_type -> base.CliBaseRsp
	10, // 15: product.Product.EditProductStatus:output_type -> base.CliBaseRsp
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_product_product_proto_init() }
func file_product_product_proto_init() {
	if File_product_product_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_product_product_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductStock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductEditReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductStockReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_product_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductStockRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_product_product_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_product_product_proto_goTypes,
		DependencyIndexes: file_product_product_proto_depIdxs,
		MessageInfos:      file_product_product_proto_msgTypes,
	}.Build()
	File_product_product_proto = out.File
	file_product_product_proto_rawDesc = nil
	file_product_product_proto_goTypes = nil
	file_product_product_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProductClient is the client API for Product service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProductClient interface {
	GetProductList(ctx context.Context, in *ProductListReq, opts ...grpc.CallOption) (*ProductListRsp, error)
	GetProductStock(ctx context.Context, in *ProductStockReq, opts ...grpc.CallOption) (*ProductStockRsp, error)
	AddProduct(ctx context.Context, in *ProductAddReq, opts ...grpc.CallOption) (*base.CliBaseRsp, error)
	EditProduct(ctx context.Context, in *ProductEditReq, opts ...grpc.CallOption) (*base.CliBaseRsp, error)
	EditProductStatus(ctx context.Context, in *ProductStatusReq, opts ...grpc.CallOption) (*base.CliBaseRsp, error)
}

type productClient struct {
	cc grpc.ClientConnInterface
}

func NewProductClient(cc grpc.ClientConnInterface) ProductClient {
	return &productClient{cc}
}

func (c *productClient) GetProductList(ctx context.Context, in *ProductListReq, opts ...grpc.CallOption) (*ProductListRsp, error) {
	out := new(ProductListRsp)
	err := c.cc.Invoke(ctx, "/product.Product/GetProductList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) GetProductStock(ctx context.Context, in *ProductStockReq, opts ...grpc.CallOption) (*ProductStockRsp, error) {
	out := new(ProductStockRsp)
	err := c.cc.Invoke(ctx, "/product.Product/GetProductStock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) AddProduct(ctx context.Context, in *ProductAddReq, opts ...grpc.CallOption) (*base.CliBaseRsp, error) {
	out := new(base.CliBaseRsp)
	err := c.cc.Invoke(ctx, "/product.Product/AddProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) EditProduct(ctx context.Context, in *ProductEditReq, opts ...grpc.CallOption) (*base.CliBaseRsp, error) {
	out := new(base.CliBaseRsp)
	err := c.cc.Invoke(ctx, "/product.Product/EditProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) EditProductStatus(ctx context.Context, in *ProductStatusReq, opts ...grpc.CallOption) (*base.CliBaseRsp, error) {
	out := new(base.CliBaseRsp)
	err := c.cc.Invoke(ctx, "/product.Product/EditProductStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProductServer is the server API for Product service.
type ProductServer interface {
	GetProductList(context.Context, *ProductListReq) (*ProductListRsp, error)
	GetProductStock(context.Context, *ProductStockReq) (*ProductStockRsp, error)
	AddProduct(context.Context, *ProductAddReq) (*base.CliBaseRsp, error)
	EditProduct(context.Context, *ProductEditReq) (*base.CliBaseRsp, error)
	EditProductStatus(context.Context, *ProductStatusReq) (*base.CliBaseRsp, error)
}

// UnimplementedProductServer can be embedded to have forward compatible implementations.
type UnimplementedProductServer struct {
}

func (*UnimplementedProductServer) GetProductList(context.Context, *ProductListReq) (*ProductListRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProductList not implemented")
}
func (*UnimplementedProductServer) GetProductStock(context.Context, *ProductStockReq) (*ProductStockRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProductStock not implemented")
}
func (*UnimplementedProductServer) AddProduct(context.Context, *ProductAddReq) (*base.CliBaseRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddProduct not implemented")
}
func (*UnimplementedProductServer) EditProduct(context.Context, *ProductEditReq) (*base.CliBaseRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditProduct not implemented")
}
func (*UnimplementedProductServer) EditProductStatus(context.Context, *ProductStatusReq) (*base.CliBaseRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditProductStatus not implemented")
}

func RegisterProductServer(s *grpc.Server, srv ProductServer) {
	s.RegisterService(&_Product_serviceDesc, srv)
}

func _Product_GetProductList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServer).GetProductList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product.Product/GetProductList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServer).GetProductList(ctx, req.(*ProductListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Product_GetProductStock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductStockReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServer).GetProductStock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product.Product/GetProductStock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServer).GetProductStock(ctx, req.(*ProductStockReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Product_AddProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductAddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServer).AddProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product.Product/AddProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServer).AddProduct(ctx, req.(*ProductAddReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Product_EditProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductEditReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServer).EditProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product.Product/EditProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServer).EditProduct(ctx, req.(*ProductEditReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Product_EditProductStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductStatusReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductServer).EditProductStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/product.Product/EditProductStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductServer).EditProductStatus(ctx, req.(*ProductStatusReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Product_serviceDesc = grpc.ServiceDesc{
	ServiceName: "product.Product",
	HandlerType: (*ProductServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetProductList",
			Handler:    _Product_GetProductList_Handler,
		},
		{
			MethodName: "GetProductStock",
			Handler:    _Product_GetProductStock_Handler,
		},
		{
			MethodName: "AddProduct",
			Handler:    _Product_AddProduct_Handler,
		},
		{
			MethodName: "EditProduct",
			Handler:    _Product_EditProduct_Handler,
		},
		{
			MethodName: "EditProductStatus",
			Handler:    _Product_EditProductStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "product/product.proto",
}
